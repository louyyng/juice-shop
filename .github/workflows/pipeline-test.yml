name: DevSecOps Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
        
      - name: Secret scan with Truffle
        uses: trufflesecurity/trufflehog@main
        with: 
            path: ./
            base: ${{ github.event.before }}
            head: ${{ github.sha }}
            extra_args: --only-verified            
    
  sast:
    name:    SAST Analysis
    runs-on: ubuntu-latest
    needs:   build
    permissions:
        actions:         read
        contents:        read
        security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
            languages: ${{ matrix.language }}
    
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
            category: "/language:${{ matrix.language }}"
     
  sca:
    name: SCA Analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'juice-shop'
          scanPath: '.'
          format: 'HTML'
          args: '--disableArchive'

      - name: Create reports directory
        run: mkdir -p ${{ github.workspace }}/reports; chmod -R 777 ${{ github.workspace }}

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: ${{ github.workspace }}/reports/dependency-check-report.html

  container-scan:
    name: Container Scanning
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          
        - name: Build Docker image
          run: docker build -t juice-shop:latest .

        - name: Scan Local Image With Trivy
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: 'juice-shop:latest'
            format: 'table'
            exit-code: '0'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'
  dast:
    name: DAST Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Run Juice shop in container
          run: | 
            docker build -t juice-shop:latest .
            docker run -d -p 3000:3000 --name juice-shop-dast juice-shop:latest
        
        - name: Wait for application to start
          run: sleep 60

        - name: Prepare directory and set permissions for ZAP
          run: |
            mkdir -p ${{ github.workspace }}/zap-reports
            chmod -R 777 ${{ github.workspace }}

        - name: OWASP ZAP Scan
          uses: zaproxy/action-baseline@v0.12.0
          with:
            target: 'http://localhost:3000'
            cmd_options: '-r ${{ github.workspace }}/zap-reports/zap_report.html'

        - name: Upload ZAP report
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: zap-baseline-report
            path: ${{ github.workspace }}/zap-reports/zap_report.html

